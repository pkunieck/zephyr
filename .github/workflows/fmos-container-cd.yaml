# FMOS Container CD 
#   simple container scan + intel proxy enabler for upstream CI ingredients
#
#   executes on testhead

name: fmos-container-cd
on:
  workflow_dispatch:
        
jobs:
  external-container-cd:
    defaults:
      run:
        shell: bash  
    runs-on: fmos-ubuntu-latest
    strategy:
      matrix:
        imgs: [ 'texlive/texlive:latest', 'ghcr.io/enricomi/publish-unit-test-result-action:latest' ]
        registry: [ 'amr-registry.caas.intel.com/zephyrproject' ] 
    steps:
      - name: pull & CVE scan external container image
        run: |
          docker login -u ${{ secrets.DOCKERIO_USER }} -p ${{ secrets.DOCKERIO_PASSWD }} && \
          docker pull aquasec/trivy:latest && \
          docker pull ${{ matrix.imgs }} && \
          docker run --rm -e http_proxy -e https_proxy -v/var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest i --timeout 15m --security-checks vuln,config --exit-code 1 --ignore-unfixed --severity CRITICAL ${{ matrix.imgs }} && \
          docker logout
      - name: add intel proxy layer to container & push to internal registry
        run: |
          echo -e 'FROM ${{ matrix.imgs }}\nARG HTTPPROXY=\nARG HTTPSPROXY=\nENV http_proxy=$HTTPPROXY\nENV https_proxy=$HTTPSPROXY\n' > Dockerfile && \
          docker build --pull --build-arg HTTPPROXY=$http_proxy --build-arg HTTPSPROXY=$https_proxy -t ${{ matrix.registry }}/${{ matrix.imgs }} . && \
          docker login -u ${{ secrets.CAAS_PRODUCTION_BOT_USERNAME }} -p ${{ secrets.CAAS_PRODUCTION_BOT_PASSWD }} amr-registry.caas.intel.com && \
          docker push ${{ matrix.registry }}/${{ matrix.imgs }} && \
          docker logout amr-registry.caas.intel.com
